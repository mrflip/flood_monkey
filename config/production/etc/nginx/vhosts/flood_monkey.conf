upstream flood_monkey {
  server unix:/var/www/flood_monkey/shared/tmp/unicorn.sock fail_timeout=0;
}

server {
  listen                80 default deferred;                 # for Linux
  # listen              80 default accept_filter=httpready;  # for FreeBSD
  # listen              80 default;
  client_max_body_size  200M;
  keepalive_timeout     5;
  server_name           _ ;
  root                  /var/www/flood_monkey/current/public; # path to static files
  access_log            /var/www/flood_monkey/shared/log/flood_monkey-access.log;
  error_log             /var/www/flood_monkey/shared/log/flood_monkey-error.log;

  # Serve up maintenance page for all requests if it's there
  if (-f $document_root/maintenance.html) { rewrite ^(.*)$ /maintenance.html last; break; }
  # Add far-future expires header for static content
  location ~* \.(png|ico|gif|jpe?g|pdf|zip|rar|tar\.gz|tar\.bz2)$ {
    if (-f $request_filename) { expires 7d; break; }  }
  location ~* ((javascripts|stylesheets)/.+\.(css|js))$ {
    if (-f $request_filename) { expires 7d; break; }  }
  
  location / {
    # deny 99.99.99.99 # blacklist addresses
    allow  all;

    #
    # Proxy settings http://wiki.nginx.org/NginxHttpProxyModule
    # 
    proxy_set_header    X-Real-IP  $remote_addr;                # needed to forward user's IP address to rails
    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header  X-Forwarded-Proto https;                # enable this if and only if you use HTTPS, helps Rack
    proxy_set_header    Host $http_host;
    proxy_redirect      off;
    proxy_buffering     on;                                     # turn off *only* if doing comet stuff or if serving fast clients only
    # http_proxy_temp_path       "/tmp/nginx-proxy_temp" 

    # don't page cache any POST requests
    if ($request_method = POST)          { proxy_pass http://flood_monkey; break; }
    # If it matches a static asset
    if (-f $request_filename/index.html) { rewrite (.*) $1/index.html      break; }
    if (-f $request_filename.html)       { rewrite (.*) $1.html            break; }
    # Otherwise send to proxy
    if (!-f $request_filename)           { proxy_pass http://flood_monkey; break; }
  }

  # Error Page
  # error_page    404          /404.html;
  error_page  500 502 503 504  /50x.html;
  location = /50x.html { root html; }  
}
